// Code generated by "stringer -type=tokenType -output tokentype_string_test.go"; DO NOT EDIT.

package tokenizer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidoTokenType-0]
	_ = x[JsonNumberTokenType-1]
	_ = x[JsonWhitespaceTokenType-2]
	_ = x[JsonColonTokenType-3]
	_ = x[JsonCurlyOpenBracketTokenType-4]
	_ = x[JsonCurlyClosingBracketTokenType-5]
	_ = x[JsonCommaTokenType-6]
	_ = x[JsonStringTokenType-7]
}

const _tokenType_name = "invalidoTokenTypejsonNumberTokenTypejsonWhitespaceTokenTypejsonColonTokenTypejsonCurlyOpenBracketTokenTypejsonCurlyClosingBracketTokenTypejsonCommaTokenTypejsonStringTokenType"

var _tokenType_index = [...]uint8{0, 17, 36, 59, 77, 106, 138, 156, 175}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_tokenType_index)-1) {
		return "tokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenType_name[_tokenType_index[i]:_tokenType_index[i+1]]
}
